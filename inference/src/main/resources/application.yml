spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  profiles:
    active: zsl
  rabbitmq:
    host: xxxxx # RabbitMQ 服务的地址
    port: 5672 # RabbitMQ 服务的端口
    username: xxxx # RabbitMQ 服务的账号
    password: xxxxxx # RabbitMQ 服务的密码
    listener:
      direct:
        acknowledge-mode: manual  # 手动确认消息
        default-requeue-rejected: true
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000
      simple:
        default-requeue-rejected: true
        acknowledge-mode: manual  # 手动确认消息
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    dynamic:
      p6spy: true
      primary: postgres
      strict: true
      datasource:
        postgres:
          type: ${spring.datasource.type}
          driverClassName: org.postgresql.Driver
          url: jdbc:postgresql://xxxxxxx:5432/zang?useSSL=true&autoReconnect=true&currentSchema=NexusAI
          username: xxxx
          password: xxxxx
      hikari:
        # 最大连接池数量
        maxPoolSize: 20
        # 最小空闲线程数量
        minIdle: 10
        # 配置获取连接等待超时的时间
        connectionTimeout: 30000
        # 校验超时时间
        validationTimeout: 5000
        # 空闲连接存活最大时间，默认10分钟
        idleTimeout: 600000
        # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
        maxLifetime: 1800000
        # 多久检查一次连接的活性
        keepaliveTime: 30000
spring.data:
  redis:
    # 地址
    host: xxxx
    # 端口，默认为6379
    port: xxxxx
    # 数据库索引
    database: 0
    # 密码(如没有密码请注释掉)
    password: xxxxx
    # 连接超时时间
    timeout: 10s
    # 是否开启ssl
    ssl.enabled: false
logging:
  level:
    root: info
    org.dromara.streamquery.stream.plugin.mybatisplus.dynamicMapper: debug

  # redisson 配置
redisson:
  # redis key前缀
  keyPrefix:
  # 线程池数量
  threads: 4
  # Netty线程池数量
  nettyThreads: 8
  # 单节点配置
  singleServerConfig:
    # 客户端名称
    clientName: ${rush.name}
    # 最小空闲连接数
    connectionMinimumIdleSize: 8
    # 连接池大小
    connectionPoolSize: 32
    # 连接空闲超时，单位：毫秒
    idleConnectionTimeout: 10000
    # 命令等待超时，单位：毫秒
    timeout: 3000
    # 发布和订阅连接池大小
    subscriptionConnectionPoolSize: 50

server:
  # 端口
  port: 8081
mybatis-plus:
  global-config:
    db-config:
      schema: "\"NexusAI\""
stream-query:
  mybatis-plus:
    safe-mode: on
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token前缀
  token-prefix: Bearer
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true


# 滑块验证码配置， 详细请看 cloud.tianai.captcha.autoconfiguration.ImageCaptchaProperties 类
captcha:
  # 如果项目中使用到了redis，滑块验证码会自动把验证码数据存到redis中， 这里配置redis的key的前缀,默认是captcha:slider
  prefix: captcha
  # 验证码过期时间，默认是2分钟,单位毫秒， 可以根据自身业务进行调整
  expire:
    # 默认缓存时间 2分钟
    default: 10000
    # 针对 点选验证码 过期时间设置为 2分钟， 因为点选验证码验证比较慢，把过期时间调整大一些
    WORD_IMAGE_CLICK: 20000
  # 使用加载系统自带的资源， 默认是 false
  init-default-resource: false
  cache:
    # 缓存控制， 默认为false不开启
    enabled: true
    # 验证码会提前缓存一些生成好的验证数据， 默认是20
    cacheSize: 20
    # 缓存拉取失败后等待时间 默认是 5秒钟
    wait-time: 5000
    # 缓存检查间隔 默认是2秒钟
    period: 2000
  secondary:
    # 二次验证， 默认false 不开启
    enabled: false
    # 二次验证过期时间， 默认 2分钟
    expire: 120000
    # 二次验证缓存key前缀，默认是 captcha:secondary
    keyPrefix: "captcha:secondary"
ai:
  host: http:10.2.22.2
  key: sadsadasd

dromara:
  x-file-storage: #文件存储配置
    default-platform: minio-1 #默认使用的存储平台
    thumbnail-suffix: ".min.jpg" #缩略图后缀，例如【.min.jpg】【.png】
    #对应平台的配置写在这里，注意缩进要对齐
    minio:
      - platform: minio-1 # 存储平台标识
        enable-storage: true  # 启用存储
        access-key: xxxx
        secret-key: xxxx
        end-point: http://xxxxx:8086
        bucket-name: brain-wave-
        domain: http://xxxxxxxx:8086/ # 访问域名，注意“/”结尾，例如：http://minio.abc.com/abc/
        base-path: test/ # 基础路径
doc-apis:
  docVersion: 1.0.0
  corsConfig:
    allowCors: true # 是否允许跨域, 默认值为true,因为本地Html直接访问后端服务是无法跨域的,所以默认开启跨域,若需要关闭跨域,请配置allowCors为false即可
    maxAge: 3600000 # 允许跨域时间,默认值为3600s
temp:
  path:
    windows: C:\temp
    linux: /data/temp
    macos: /data/temp